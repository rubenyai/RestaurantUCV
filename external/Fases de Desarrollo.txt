Interfaces a Construir
* Caja
* Confirmacion de Pedido
* Despacho de Pedidos
* Editor de Contornos
* Editor de Platos
* Estadisticas
* Gestor de Pedido
* Inicio de Sesion
* Inicio de Sesion Fallido
* Preparacion de Pedidos
* Selector de Contornos
* Selector de Tareas

Clases a Construir
* Controlador
* Usuarios
    + Usuario
* Cartelera
    + Especialidad
    + Contorno
* Estadisticas
    + ContadorEspecialidad
    + ContadorContorno
* Pedido
* Cliente
    + Factura




FASES DE DESARROLLO


CADA FASE DEBE EJECUTARSE SECUENCIALMENTE Y DEBE COMPLETARSE UNA PARA CONTINUAR CON LA OTRA
NO DEBERIAN EXISTIR CONFLICTOS NI DEPENDENCIAS CRUZADAS ENTRE LOS ELEMENTOS DE LAS FASES



============
== FASE 1 == DONE
============
 1.1   // RUBEN ------- LISTA
     - Definicion de Constantes
	   + Enumeracion con los roles de los usuarios
	   + Estructura del Archivo de Usuarios (Como se almacenan los atributos: Usuario + Contrasena + Rol)
     - CLS::Usuario
	 - CLS::Usuarios
	   + Lectura y validacion del archivo de usuarios
 1.2   // DAVID ------ LISTA
     - CLS::Cliente 
	 - CLS::Especialidad
	 - CLS::Contorno
	 - CLS::ContadorEspecialidad
	 - CLS::ContadorContorno
 1.3   // FABIAN ------ LISTA 
	 - CTRL::Logica de EntryPoint de la aplicacion
	 - CTRL::Logica del Controlador de Ventanas
	 - UI::Logica de ILogin + IErrorLogin PARCIAL
	 - UI::Logica del Selector de Tareas
	   + Implementacion de metodo OpenSubTask(...):void
	 - CTRL::Definicion de metodos sin cuerpo

============
== FASE 2 == DONE
============
 2.1
	//DAVID
     - CLS::Cartelera ------ LISTA
	 - CLS::Estadisticas ------ LISTA
	 - CLS::Pedido ------ LISTA 
	 - CLS::Factura (assoc) ------ LISTA
 2.2    // RUBEN
     - UI::Logica de ISelectorContornos COMPLETA ------ LISTA
	 - UI::Logica de ILogin + IErrorLogin COMPLETA con soporte de archivo de credenciales (clase Usuarios) ------ LISTA
	 - UI::Logica de IEstadisticas COMPLETA ------ LISTA
 2.3    // FABIAN
     - UI::Logica de IEditorPlatos COMPLETA ------ LISTA
	 - UI::Logica de IEditorContornos COMPLETA ------ LISTA

============
== FASE 3 ==  DONE
============
 3.1	//RUBEN
	 - UI::Logica de IPedido COMPLETA ------ LISTA
	 - UI::Logica de ICocina COMPLETA ------ LISTA
	 - UI::Logica de IGestorPedidos COMPLETA -------- LISTA
 3.2     // DAVID
         - UI::Logica de ICaja COMPLETA ------ LISTA
	 - UI::Logica de IDespachoPedidos COMPLETA ------ LISTA
 3.3    // FABIAN
	 - CTRL::Completar todos los metodos sin cuerpo ------ LISTA

============
== FASE 4 == DONE
============
 4.1

     - TEST:Pruebas Unitarias del Actor:Chef ------ LISTA
 4.2

     - TEST::Pruebas Unitarias del Actor:Cajero ------ LISTA
	 - TEST::Pruebas Unitarias del Actor:Mesonero ------ LISTA
 4.3

     - TEST::Pruebas Unitarias del Actor:Cliente ------ LISTA

============
== FASE 5 == DONE
============
 5.1
	// FABIAN
    - Enlace y Limpieza de codigo obsoleto  ------ LISTA
	  + Repasar todos los metodos y eliminar el codigo comentado/obsoleto 
 5.2
	// FABIAN
    - Refactorizar codigo ------ LISTA
	  + Aplicar sugerencias de netbeans
	  + Aplicar optimizaciones que se encuentren sobre la marcha
	  + Renombrar elementos con nombres ambiguos o genericos y colocarles nombres mas intuitivos
 5.3
	//FABIAN Y DAVID Y RUBEN
    - Eliminar Interfaces y codigo auxiliar para depuracion
    - DOCUMENTAR (BIEN DOCUMENTADO) BIIIIENNNNNNNNN DOCUMENTADOOOOOOOO!!!!

============
== FASE 6 == DONE
============
 6.1
	//DAVID
    - Ensamblado de paquete JAR y prueba bajo Windows ------ LISTA
 6.2
	//FABIAN
    - Ensamblado de paquete JAR y prueba bajo LINUX (Ubuntu) ------ LISTA
 6.3
	//RUBEN
    - Construccion de Archivo MARKDOWN para el programa con lo siguiente: ------ LISTA
	  + Requisitos del Proyecto
	  + Documentacion de Compilacion bajo Windows
	  + Documentacion de Compilacion bajo Linux
	  + Documentacion del Archivo de Credenciales
	  + Documentacion sobre el uso de la aplicacion (Por ACTOR)