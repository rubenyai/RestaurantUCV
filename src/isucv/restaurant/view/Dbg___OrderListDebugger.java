/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package isucv.restaurant.view;

import isucv.restaurant.controller.Controller;
import isucv.restaurant.model.ContadorContorno;
import isucv.restaurant.model.ContadorEspecialidad;
import isucv.restaurant.model.Pedido;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author kderazorback
 */
public class Dbg___OrderListDebugger extends javax.swing.JFrame {

    /**
     * Creates new form Dbg___OrderListDebugger
     */
    public Dbg___OrderListDebugger() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableUnpaid = new javax.swing.JList<String>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePaid = new javax.swing.JList<String>();
        jLabel2 = new javax.swing.JLabel();
        cmdRefresh = new javax.swing.JButton();
        cmdDetach = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Order List Viewer");
        setResizable(false);

        tableUnpaid.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(tableUnpaid);

        jLabel1.setText("UnpaidOrders");

        tablePaid.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(tablePaid);

        jLabel2.setText("PaidOrders");

        cmdRefresh.setText("Refresh");
        cmdRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRefreshActionPerformed(evt);
            }
        });

        cmdDetach.setText("Detach from AppC");
        cmdDetach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDetachActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmdDetach, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmdRefresh)
                        .addComponent(cmdDetach))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdDetachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDetachActionPerformed
        cmdDetach.setEnabled(false);
        Controller.SetActiveWindow(null);
    }//GEN-LAST:event_cmdDetachActionPerformed

    private void cmdRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRefreshActionPerformed
        // UnpaidOrders
        DefaultListModel<String> md = new DefaultListModel<>();
        
        DumpArrayList(Controller.GetUnpaidOrders(), md);
        tableUnpaid.setModel(md);
        
        md = new DefaultListModel<>();
        DumpArrayList(Controller.GetPendingOrders(), md);
        tablePaid.setModel(md);
    }//GEN-LAST:event_cmdRefreshActionPerformed

    
    private void DumpArrayList(ArrayList<Pedido> source, DefaultListModel<String> target)
    {
        int i;
        Pedido p;
        for (i = 0; i < source.size(); i++)
        {
            p = source.get(i);
            String description = "[";
            description += p.GetId();
            description += "]  status=";
            description += p.GetStatus();
            target.addElement(description);
            
            // Agregar Especialidades
            int s;
            for (s = 0; s < p.GetSpecialities().size(); s++)
            {
                ContadorEspecialidad cs = p.GetSpecialities().get(s);
                description = "     + (";
                description += cs.GetCount();
                description += ")  ";
                description += cs.GetSpeciality().GetName();
                description += " [sides=";
                description += cs.GetSides().size();
                description += ", maxsides=";
                description += cs.GetSpeciality().GetTotalSides();
                description += "]";
                
                target.addElement(description);
                
                // Agregar Contornos Incluidos
                int c;
                for (c = 0; c < cs.GetSides().size(); c++)
                {
                    ContadorContorno cc = cs.GetSides().get(c);
                    description = "          - (";
                    description += cc.GetCount();
                    description += ")  ";
                    description += cc.GetSide().GetName();
                    
                    target.addElement(description);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdDetach;
    private javax.swing.JButton cmdRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> tablePaid;
    private javax.swing.JList<String> tableUnpaid;
    // End of variables declaration//GEN-END:variables
}
