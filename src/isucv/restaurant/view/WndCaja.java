/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package isucv.restaurant.view;

import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import isucv.restaurant.controller.Controller;
import isucv.restaurant.model.Pedido;
import java.awt.Color;
import java.text.NumberFormat;
import java.text.ParsePosition;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Equipo Ingenieria de Software <David Contreras, Fabian Ramos, Ruben Maza>
 */
public class WndCaja extends javax.swing.JFrame {

    private final static int ORDER_COLUMN_QUANTITY = 0;
    private final static int ORDER_COLUMN_DESCRIPTION = 1;
    private final static int ORDER_COLUMN_PRICE = 2;
    // ATRIBUTOS INTERNOS
    Integer ID;
    float Total = 0;
    float Costo, Balance = 0;
    int Cantidad;
    String Descripcion;
    /**
     * Creates new form WndCaja
     */
    public WndCaja() {
        initComponents();
        // Center Column text for the JTable
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        tableResumen.getColumnModel().getColumn(ORDER_COLUMN_QUANTITY).setCellRenderer(centerRenderer);
        
        // Setup Column Width for the JTable
        tableResumen.getColumnModel().getColumn(ORDER_COLUMN_QUANTITY).setPreferredWidth(40);
        tableResumen.getColumnModel().getColumn(ORDER_COLUMN_QUANTITY).setMaxWidth(80);
        tableResumen.getColumnModel().getColumn(ORDER_COLUMN_DESCRIPTION).setPreferredWidth(360);
        tableResumen.getColumnModel().getColumn(ORDER_COLUMN_PRICE).setPreferredWidth(120);
        
        lblId.setText("");
        ClearFiles(); //Se elimina el contenido de los Files y jTable
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTextId = new javax.swing.JLabel();
        lblId = new javax.swing.JTextField();
        cmdSearchOrder = new javax.swing.JButton();
        lblTextDatosdeCliente = new javax.swing.JLabel();
        lblTextNombre = new javax.swing.JLabel();
        lblNombre = new javax.swing.JTextField();
        lblTextCedula = new javax.swing.JLabel();
        lblCedula = new javax.swing.JTextField();
        lblTextDireccion = new javax.swing.JLabel();
        lblTextTelefono = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JTextField();
        lblDireccion1 = new javax.swing.JTextField();
        lblDireccion2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableResumen = new javax.swing.JTable();
        lblTextResumen = new javax.swing.JLabel();
        panelSubIvaTotal = new javax.swing.JPanel();
        lblTextSubtotal = new javax.swing.JLabel();
        lblSubtotal = new javax.swing.JLabel();
        lblTextIVA = new javax.swing.JLabel();
        lblIva = new javax.swing.JLabel();
        lblTextTotalaPagar = new javax.swing.JLabel();
        lblTotalaPagar = new javax.swing.JLabel();
        cmdGenerateOrder = new javax.swing.JButton();
        cmdDiscardOrder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pago de Pedidos");
        setResizable(false);

        lblTextId.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTextId.setText("Identificador de Pedido");

        lblId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblId.setText("2456");
        lblId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblIdActionPerformed(evt);
            }
        });

        cmdSearchOrder.setText("Buscar");
        cmdSearchOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSearchOrderActionPerformed(evt);
            }
        });

        lblTextDatosdeCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTextDatosdeCliente.setText("Datos de Cliente");

        lblTextNombre.setText("Nombre o Razon Social");

        lblNombre.setText("Paulo Perez");

        lblTextCedula.setText("Cedula o RIF");

        lblCedula.setText("V-14.587.655");

        lblTextDireccion.setText("Direccion");

        lblTextTelefono.setText("Tel√©fono");

        lblTelefono.setText("0416-7172772");

        lblDireccion1.setText("Universidad Central de Venezuela");

        lblDireccion2.setText("Distrito Capital, Zona Postal 1050");

        tableResumen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableResumen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1), "Pollo a la Canasta",  new Float(580.4)},
                {null, "Arroz Blanco",  new Float(0.0)},
                {null, "Yuca Frita",  new Float(0.0)},
                { new Integer(2), "Pizza Margarita",  new Float(685.4)},
                { new Integer(1), "Hamburguesa de carne",  new Float(483.8)},
                {null, "Papas Fritas",  new Float(0.0)},
                { new Integer(3), "Papas Fritas",  new Float(210.7)},
                { new Integer(1), "Nestea Durazno",  new Float(90.0)}
            },
            new String [] {
                "Cantidad", "Descripcion", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableResumen);

        lblTextResumen.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTextResumen.setText("Resumen de Pedido");

        panelSubIvaTotal.setBackground(new java.awt.Color(204, 204, 204));

        lblTextSubtotal.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblTextSubtotal.setText("Subtotal");

        lblSubtotal.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblSubtotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSubtotal.setText("3157.10 BsF");

        lblTextIVA.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblTextIVA.setText("IVA (12%)");

        lblIva.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblIva.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblIva.setText("378.85 BsF");

        lblTextTotalaPagar.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        lblTextTotalaPagar.setText("Total a Pagar");

        lblTotalaPagar.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        lblTotalaPagar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotalaPagar.setText("3535.95 BsF");

        javax.swing.GroupLayout panelSubIvaTotalLayout = new javax.swing.GroupLayout(panelSubIvaTotal);
        panelSubIvaTotal.setLayout(panelSubIvaTotalLayout);
        panelSubIvaTotalLayout.setHorizontalGroup(
            panelSubIvaTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSubIvaTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSubIvaTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSubIvaTotalLayout.createSequentialGroup()
                        .addComponent(lblTextSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblSubtotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelSubIvaTotalLayout.createSequentialGroup()
                        .addComponent(lblTextIVA, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblIva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSubIvaTotalLayout.createSequentialGroup()
                        .addComponent(lblTextTotalaPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTotalaPagar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelSubIvaTotalLayout.setVerticalGroup(
            panelSubIvaTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSubIvaTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSubIvaTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelSubIvaTotalLayout.createSequentialGroup()
                        .addComponent(lblSubtotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1))
                    .addComponent(lblTextSubtotal, javax.swing.GroupLayout.Alignment.LEADING))
                .addGroup(panelSubIvaTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelSubIvaTotalLayout.createSequentialGroup()
                        .addComponent(lblIva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1))
                    .addComponent(lblTextIVA, javax.swing.GroupLayout.Alignment.LEADING))
                .addGroup(panelSubIvaTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelSubIvaTotalLayout.createSequentialGroup()
                        .addComponent(lblTotalaPagar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1))
                    .addComponent(lblTextTotalaPagar, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        cmdGenerateOrder.setText("Generar Pedido");
        cmdGenerateOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGenerateOrderActionPerformed(evt);
            }
        });

        cmdDiscardOrder.setText("Descartar Pedido");
        cmdDiscardOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDiscardOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblTextId)
                        .addGap(10, 10, 10)
                        .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(cmdSearchOrder)
                        .addGap(52, 234, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lblDireccion2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(panelSubIvaTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmdGenerateOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmdDiscardOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTextNombre)
                            .addComponent(lblTextCedula)
                            .addComponent(lblTextDireccion))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDireccion1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCedula)
                                .addGap(18, 18, 18)
                                .addComponent(lblTextTelefono)
                                .addGap(10, 10, 10)
                                .addComponent(lblTelefono))
                            .addComponent(lblNombre)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTextDatosdeCliente)
                            .addComponent(lblTextResumen))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblTextId))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmdSearchOrder))
                .addGap(11, 11, 11)
                .addComponent(lblTextDatosdeCliente)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblTextNombre))
                    .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTextCedula)
                            .addComponent(lblTextTelefono))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblTextDireccion))
                    .addComponent(lblDireccion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(lblDireccion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(lblTextResumen)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelSubIvaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmdGenerateOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(cmdDiscardOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Boton BUSCAR
    private void cmdSearchOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSearchOrderActionPerformed
        //Se inicializa balance
        Balance=0;
        ClearFiles();
        //Verificamos si es un decimal
        boolean esdecimal=false;
         for (int n=0;n<lblId.getText().length(); n ++) 
         { 
             if(lblId.getText().charAt(n)=='.' || lblId.getText().charAt(n)==',')
             {esdecimal= true;}
         }
        //Verificamos si ID esta lleno con valores validos
        if(!"".equals(lblId.getText()) && isNumeric(lblId.getText()) && esdecimal==false)
        {
            //Se busca el pedido utilizando el ID
            Integer i, j;
            //VARIABLES PARA SER USADAS CUANDO SAQUES LOS DATOS DEL ARRAYLIST
            String Descripcion;
            Pedido ActualOrder;
            ID = Integer.parseInt(lblId.getText());
            ActualOrder = Controller.FindOrder(ID);
            lblId.setBackground(Color.white);
            if (Controller.FindOrder(ID) != null && "Generado".equals(ActualOrder.GetStatus()))
            {
                lblNombre.setEnabled(true);
                lblCedula.setEnabled(true);
                lblTelefono.setEnabled(true);
                lblDireccion1.setEnabled(true);
                lblDireccion2.setEnabled(true);
                cmdGenerateOrder.setEnabled(true);
                cmdDiscardOrder.setEnabled(true);
                Object[] Nuevo = new Object[3];
                //Se empieza a hacer el llenado del jTable1 que contiene el Resumen del Pedido
                //Aqui sacamos los datos de especialidades
                DefaultTableModel modelo = (DefaultTableModel) tableResumen.getModel();
                modelo.setNumRows(0); // Se elimina el contenido del Table
                for (i = 0; i < ActualOrder.GetSpecialities().size(); i++)
                {
                    Descripcion = ActualOrder.GetSpecialities().get(i).GetSpeciality().GetName();
                    Costo = ActualOrder.GetSpecialities().get(i).GetSpeciality().GetPrice();
                    Cantidad = ActualOrder.GetSpecialities().get(i).GetCount();
                    Balance = (Balance + (Cantidad * Costo));
                    Nuevo = new Object[] {Cantidad, Descripcion, Costo};
                    modelo.addRow(Nuevo);
                    ClearVariables(); //Se resetean las variables a status inciales
                    //Se a√±aden los contornos del plato al table
                    for (j = 0; j < ActualOrder.GetSpecialities().get(i).GetSides().size(); j++)
                    {
                        Descripcion = ActualOrder.GetSpecialities().get(i).GetSides().get(j).GetSide().GetName();
                        Cantidad = ActualOrder.GetSpecialities().get(i).GetSides().get(j).GetCount();
                        if (Cantidad == 1)
                            Nuevo = new Object[] {null, "          " +  Descripcion, null};
                        else
                            Nuevo = new Object[] {Cantidad, "          " +  Descripcion, null};

                        modelo.addRow(Nuevo);
                        ClearVariables();
                    }
                    ClearVariables();
                } 
                //Aqui la de los contornos ADICIONALES
                for (i = 0; i < ActualOrder.GetSides().size(); i++)
                {
                    Descripcion = ActualOrder.GetSides().get(i).GetSide().GetName();
                    Costo=ActualOrder.GetSides().get(i).GetSide().GetPrice();
                    Cantidad=ActualOrder.GetSides().get(i).GetCount();
                    Balance = (Balance + (Cantidad * Costo));
                    Nuevo = new Object[] {Cantidad, Descripcion, Costo};
                    modelo.addRow(Nuevo);
                    ClearVariables(); ////Se resetean las variables a status inciales
                }

                CalculateAmount(Balance);
            }
            else
            {
                ClearFiles();
                lblId.setBackground(Color.red);
            }
        }else{
            lblId.setBackground(Color.red);
        }
    }//GEN-LAST:event_cmdSearchOrderActionPerformed

    private void cmdDiscardOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDiscardOrderActionPerformed
        if(!"".equals(lblId.getText()))
        {
            Controller.RemoveOrder(Integer.parseInt(lblId.getText()));
        }
        ClearFiles();
    }//GEN-LAST:event_cmdDiscardOrderActionPerformed

    private void cmdGenerateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGenerateOrderActionPerformed
        if(!"".equals(lblNombre.getText()) && !"".equals(lblCedula.getText()) && !"".equals(lblTelefono.getText()) && !"".equals(lblDireccion1.getText()) && !"0 BsF ".equals(lblTotalaPagar.getText()))
        {
            PayForOrder();
            ClearFiles();
            lblId.setText("");
        //Mostrar datos faltantes coloreados en rojo
        }else{
            if("".equals(lblNombre.getText()))
            {
                lblNombre.setBackground(Color.red);
            }
            if("".equals(lblCedula.getText()))
            {
                lblCedula.setBackground(Color.red);
            }
            if("".equals(lblTelefono.getText()))
            {
                lblTelefono.setBackground(Color.red);
            }
            if("".equals(lblDireccion1.getText()))
            {
                lblDireccion1.setBackground(Color.red);
            }   
        } 
    }//GEN-LAST:event_cmdGenerateOrderActionPerformed

    private void lblIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblIdActionPerformed

    private void CalculateAmount(float Balance)
    {
        //Se encarga de calcular el Subtotal de la orden
        //Falta agregar que sume todas las columnas de precio del jtable
        float aux = 0;
        aux = (float) (Balance * 0.12);
        //Se empiezan a llenar los campos del subtotal, iva y total
        lblSubtotal.setText(String.format("%.2f", Balance) + " BsF ");
        lblIva.setText(String.format("%.2f", aux) + " BsF ");
        aux = aux + Balance;
        Total = aux;
        lblTotalaPagar.setText(String.format("%.2f", aux) + " BsF ");    
    }
    private void PayForOrder()
    {//Se envian los datos del cliente al metodo payorder para poder generar  la factura
        Controller.PayOrder(lblNombre.getText(), Integer.parseInt(lblId.getText()) , lblCedula.getText(), (lblDireccion1.getText() + " " + lblDireccion2.getText()), lblTelefono.getText());
    }
    public float GetTotal()
    {
        return (Total);
    }
    
    public final void ClearFiles()
    {
        lblNombre.setText("");
        lblCedula.setText("");
        lblTelefono.setText("");
        lblDireccion1.setText("");
        lblDireccion2.setText("");
        lblNombre.setEnabled(false);
        lblCedula.setEnabled(false);
        lblTelefono.setEnabled(false);
        lblDireccion1.setEnabled(false);
        lblDireccion2.setEnabled(false);
        cmdGenerateOrder.setEnabled(false);
        cmdDiscardOrder.setEnabled(false);
        lblId.setBackground(Color.WHITE);
        lblNombre.setBackground(Color.WHITE);
        lblCedula.setBackground(Color.WHITE);
        lblTelefono.setBackground(Color.WHITE);
        lblDireccion1.setBackground(Color.WHITE);
        lblSubtotal.setText("0 BsF ");
        lblIva.setText("0 BsF ");
        lblTotalaPagar.setText("0 BsF ");
        DefaultTableModel modelo = (DefaultTableModel) tableResumen.getModel();
        modelo.setNumRows(0); // Se elimina el contenido del Table
    }
    
    private void ClearVariables()
    {
        Costo = 0;
        Cantidad = 0;
        Descripcion = "";
        Object Nuevo[]= {"", "", ""};
    }
    
    public static boolean isNumeric(String str)
    {
      NumberFormat formatter = NumberFormat.getInstance();
      ParsePosition pos = new ParsePosition(0);
      formatter.parse(str, pos);
      return str.length() == pos.getIndex();
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdDiscardOrder;
    private javax.swing.JButton cmdGenerateOrder;
    private javax.swing.JButton cmdSearchOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lblCedula;
    private javax.swing.JTextField lblDireccion1;
    private javax.swing.JTextField lblDireccion2;
    private javax.swing.JTextField lblId;
    private javax.swing.JLabel lblIva;
    private javax.swing.JTextField lblNombre;
    private javax.swing.JLabel lblSubtotal;
    private javax.swing.JTextField lblTelefono;
    private javax.swing.JLabel lblTextCedula;
    private javax.swing.JLabel lblTextDatosdeCliente;
    private javax.swing.JLabel lblTextDireccion;
    private javax.swing.JLabel lblTextIVA;
    private javax.swing.JLabel lblTextId;
    private javax.swing.JLabel lblTextNombre;
    private javax.swing.JLabel lblTextResumen;
    private javax.swing.JLabel lblTextSubtotal;
    private javax.swing.JLabel lblTextTelefono;
    private javax.swing.JLabel lblTextTotalaPagar;
    private javax.swing.JLabel lblTotalaPagar;
    private javax.swing.JPanel panelSubIvaTotal;
    private javax.swing.JTable tableResumen;
    // End of variables declaration//GEN-END:variables
}
